<?php
/**
 * @file
 * Testswarm tests for Clientside Validation.
 */

/**
 * Implements hook_menu().
 */
function clientside_validation_testswarm_menu() {
  $path = 'clientsidevalidation/tests';
  $items[$path] = array(
    'title' => 'Clientside Validation Testswarm Tests',
    'description' => 'All forms for Clientside Validation Testswarm needed to run the tests',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access content'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  $items[$path . '/fapi'] = array(
    'title' => 'Clientside Validation Fapi Test',
    'description' => 'Test Clientside Validation on normal FAPI elements',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('clientside_validation_testswarm_fapi'),
    'access arguments' => array('access content'),
    'file' => 'clientside_validation_testswarm.forms.inc',
  );

  $items[$path . '/html5'] = array(
    'title' => 'Clientside Validation HTML5 Test',
    'description' => 'Test Clientside Validation on HTML5 FAPI elements provided by the Elements module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('clientside_validation_testswarm_html5'),
    'access arguments' => array('access content'),
    'file' => 'clientside_validation_testswarm.forms.inc',
  );

  $items[$path . '/fapi_validation'] = array(
    'title' => 'Clientside Validation FAPI Validation Test',
    'description' => 'Test Clientside Validation on FAPI elements with FAPI Validation rules',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('clientside_validation_testswarm_fapi_validation'),
    'access arguments' => array('access content'),
    'file' => 'clientside_validation_testswarm.forms.inc',
  );

  return $items;
}

/**
 * Implements hook_enable().
 */
function clientside_validation_testswarm_enable() {
  module_load_include('inc', 'clientside_validation_testswarm', 'clientside_validation_testswarm.default_content');
  $content = _clientside_validation_testswarm_default_content();
  $nodenames = variable_get('clientside_validation_testswarm_nodenames', array());

  foreach ($content as $newnode) {
    if (!array_key_exists($newnode->machine_name, $nodenames) && defaultcontent_get_default($newnode->machine_name)) {
      defaultcontent_import_node($newnode);
      $nid = defaultcontent_get_default($newnode->machine_name);
      $nodenames[$newnode->machine_name] = $nid;
    }
  }
  variable_set('clientside_validation_testswarm_nodenames', $nodenames);
}

/**
 * Implements hook_testswarm_tests().
 */
function clientside_validation_testswarm_testswarm_tests() {
  $path = drupal_get_path('module', 'clientside_validation_testswarm') . '/tests/';
  $tests = array(
    'clientside_validation_testswarm_fapi' => array(
      'module' => 'Clientside Validation',
      'description' => 'Test Clientside Validation on normal FAPI elements',
      'js' => array(
        $path . 'clientside_validation_fapi.test.js' => array(),
      ),
      'path' => 'clientsidevalidation/tests/fapi',
      'query' => array(),
    ),
    'clientside_validation_testswarm_html5' => array(
      'module' => 'Clientside Validation',
      'description' => 'Test Clienstide Valiation on HTML5 FAPI elements provided by the Elements module',
      'js' => array(
        $path . 'clientside_validation_html5.test.js' => array(),
      ),
      'path' => 'clientsidevalidation/tests/html5',
      'query' => array(),
    ),
    'clientside_validation_testswarm_fapi_validation' => array(
      'module' => 'Clientside Validation',
      'description' => 'Test Clientside Validation on FAPI elements with FAPI Validation rules',
      'js' => array(
        $path . 'clientside_validation_fapi_validation.test.js' => array(),
      ),
      'path' => 'clientsidevalidation/tests/fapi_validation',
      'query' => array(),
    )
  );
  $nodenames = variable_get('clientside_validation_testswarm_nodenames', array());
  foreach ($nodenames as $machine_name => $nid) {
    if ($nid) {
      $tests['clientside_validation_testswarm_' . $machine_name] = array(
        'module' => 'Clientside Validation',
        'js' => array(
          $path . 'clientside_validation_webform.test.js' => array(),
          array(
            'data' => array(
              'clientsideValidationTestswarm' => array(
                'formID' => 'webform-client-form-' . $nid
              ),
            ),
            'type' => 'setting',
          ),
        ),
        'path' => 'clientsidevalidation/tests/' . $machine_name,
        'query' => array(),
      );
    }
  }
  return $tests;
}
