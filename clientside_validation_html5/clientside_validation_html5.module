<?php

// $Id$
/**
 * @file
 * Add clientside validation support for html5 elements
 */

function clientside_validation_html5_clientside_validation_form_alter(&$form, &$form_state, &$js_rules) {
  static $js_added = FALSE;
  if (!$js_added) {
    drupal_add_js(drupal_get_path('module', 'clientside_validation_html5') . '/clientside_validation_html5.js', array('scope' => 'footer'));
    $js_added = TRUE;
  }
  clientside_validation_html5_after_build_recurse($form['#id'], $form, $form_state, $js_rules);
}

function clientside_validation_html5_after_build_recurse($form_id, &$form, &$form_state, &$js_rules) {
  if ($children = array_values(element_children($form))) {
    foreach ($children as $index => $item) {
      $element = &$form[$item];
      $types = array(
        'number', 'url', 'email', 'range', 'search', 'tel',
      );
      if ((isset($element['#type']) && in_array($element['#type'], $types)) || isset($element['#pattern'])) {
        clientside_validation_html5($form_id, $element, $js_rules);
      }
      clientside_validation_html5_after_build_recurse($form_id, $element, $form_state, $js_rules);
    }
  }
}

function clientside_validation_html5($form_id, $element, &$js_rules) {
  static $multiples = array();
  if (isset($element['#name'])) {
    $el_name = $element['#name'];
    $el_title = $el_name;
    if (isset($element['#title'])) {
      $el_title = $element['#title'];
    }
    $is_multiple = FALSE;
    if (isset($element['#multiple'])) {
      $is_multiple = $element['#multiple'];
    }
    $required_error = isset($element['#required_error']) ? $element['#required_error'] : '';
    _clientside_validation_set_required($el_name, $el_title, $element["#required"], $js_rules, $required_error);
    if (isset($element['#pattern'])) {
      _clientside_validation_set_regex($el_name, $el_title, $js_rules, $element['#pattern']);
    }
    if (isset($element['#maxlength']) && $element['#maxlength'] > 0) {
      _clientside_validation_set_minmaxlength($el_name, $el_title, '', $element['#maxlength'], $js_rules);
    }
    switch ($element['#type']) {
      case 'range':
        $default_min = 0;
        $default_max = 100;
      case 'number':
        if (!isset($default_min)) {
          $default_min = '';
          $default_max = '';
        }
        $min = isset($element['#min']) ? $element['#min'] : $default_min;
        $max = isset($element['#max']) ? $element['#max'] : $default_max;
        $step = isset($element['#step']) ? $element['#step'] : 1;
        $is_decimal = $step != 'any' && (floor($step) != $step || floor($min) != $step);
        if ($is_decimal) {
          _clientside_validation_set_number_decimal($el_name, $el_title, '.', $js_rules);
        }
        else {
          _clientside_validation_set_number($el_name, $el_title, $js_rules);
        }
        if(!empty($min) || !empty($max)) {
          _clientside_validation_set_minmax_html5($el_name, $el_title, $min, $max, $step, $js_rules);
        }

        break;
      case 'url':
        _clientside_validation_set_url($el_name, $el_title, $js_rules);
        break;
      case 'email':
        _clientside_validation_set_email($el_name, $el_title, $js_rules);
        break;

    }
  }
}

function _clientside_validation_set_minmax_html5($name, $title, $min, $max, $step, &$js_rules, $message=''){
  $title = variable_get('clientside_validation_prefix', '') . $title . variable_get('clientside_validation_suffix', '');
  if( $step == 'any') {
    _clientside_validation_set_minmax($name, $title, $min, $max, $js_rules, $message);
  }
  elseif (isset($min) && $min !== '' && isset($max) && $max !== '') {
    $js_rules[$name]['Html5Range'] = array($min, $max, $step);
    $js_rules[$name]['messages']['Html5Range'] = (empty($message)) ? t('!name field has to be greater than !min with steps of !step and smaller than !max.', array('!name' => $title, '!min' => $min, '!max' => $max, '!step' => $step)) : $message;
  }
  elseif (isset($min) && $min !== '') {
    $js_rules[$name]['Html5Min'] = array($min, $step);
    $js_rules[$name]['messages']['Html5Min'] = (empty($message)) ? t('!name field has to be greater than !min with steps of !step.', array('!name' => $title, '!min' => $min, '!step' => $step)) : $message;
  }
  elseif (isset($max) && $max !== '') {
    $js_rules[$name]['Html5Max'] = array($max, $step);
    $js_rules[$name]['messages']['Html5Max'] = (empty($message)) ? t('!name field has to be smaller than !max and must be dividable by !step.', array('!name' => $title, '!max' => $max, '!step' => $step)) : $message;
  }
}
